{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["PostTitle","styled","h3","withConfig","displayName","componentId","rhythm","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","map","_ref","node","fields","frontmatter","slug","readingTime","excerpt","author","date","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","to","text","dangerouslySetInnerHTML","__html","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2___default","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1315885718_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-f9d791a96cda1eb35339.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst PostTitle = styled.h3`\n  margin-bottom: ${rhythm(1 / 4)}\n`\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All Posts\"\n          keywords={[`blog`, `imperfect produce`, `engineering`, `tech`]}\n        />\n        {posts.map(({ node }) => {\n          const { fields, frontmatter } = node\n          const { slug, readingTime } = fields\n          const title = frontmatter.title || fields\n          const excerpt = frontmatter.excerpt || node.excerpt\n          const { author, date } = frontmatter\n\n          return (\n            <div key={slug}>\n              <PostTitle>\n                <Link style={{ boxShadow: `none` }} to={slug}>\n                  {title}\n                </Link>\n              </PostTitle>\n              <small>\n                {author} | {date} | {readingTime.text}\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            author\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              // {\n              //   name: `twitter:card`,\n              //   content: `summary`,\n              // },\n              // {\n              //   name: `twitter:creator`,\n              //   content: data.site.siteMetadata.author,\n              // },\n              // {\n              //   name: `twitter:title`,\n              //   content: title,\n              // },\n              // {\n              //   name: `twitter:description`,\n              //   content: metaDescription,\n              // },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}